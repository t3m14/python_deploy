Для начала понадобиться установить несколько пакетов для линьки

apt install nginx - грубо говоря сервер, после установки активировать как systemcl enable nginx systemcl start nginx
apt install gunicorn - хуита для работы с wsgi, биндинга портов и прочей девопсовой шляпы, я не ебу, но она нужна
apt install python-pip - ну думаю все знают нawhooya нам нужен пип
apt install certbot - херотень которая понадобиться для получения сысыэль
apt install python-certbot-nginx - какая то ненужная поебень, но без неё сертификат не получить блин
apt install vim - по желанию, но я люблю этот текстовый редактор)

1. Как задеплоить телеграм бота
	1. Выгрузить на сервер, создать виртуальное окружение через (virtualenv insertnameoftheenviroment)(если нет то установить через pip install virtualenv)
	2. Активировать виртуаленв с помощью - source папкасботом/имяокружения/bin/activate
	3. Запустить бота, установить пакеты, deactivate
	4. Дальше ёбка, надо создать сервис
		4.1 Сначала надо кинуть chmod u+x на файл бота ( у меня без этого не стартовал)

		4.2 vim или nano /lib/systemd/system/имякакоезахочешь.service

			[Unit]
			Description=какоенибудьописаниетвоегосервиса
			After=network.target
		
			[Service]
			User=хуйзнаетнадолиюзера
			Type=simple
			ExecStart=/usr/bin/python3 туткакяпонялпутьдопитонфайланомогуошибаться
			Restart=always
	
			[Install]
			WantedBy=multi-user.target
		4.3 systemcl enable имякакоезахочешь.service
		    systemcl start имякакоезахочешь.service
		    systemcl status имякакоезахочешь.service
			Если статус не зелёный то печалька - иди гуглить где накосячил (гуглить по pid)


		ВСЕ ПУТИ КОТОРЫЕ УКАЗЫВАЮТСЯ ДОЛЖНЫ ВСТАВЛЯТЬСЯ В КОНСОЛЬКУ И НЕ ВЫЁБЫВАТЬСЯ!!!


2. Как задеплоить фласку
	1. Виртуальное окружение

	2. pip3 install gunicorn

	3. Дальше важно вынести точку запуска app.run() из нашего приложения в отдельный файл с названием типа wsgi.py

		from my_app import app

		if __name__ == "__main__":
			app.run()

	4. gunicorn -w 4 --bind 0.0.0.0:8000 wsgi:app (workers вычисляется как количество ядер процессора * 2 + 1) если всё ок то сайт доступен как http://имядомена.org:8000

	5. vim или nano /lib/systemd/system/имякакоезахочешь.service


		[Unit]
		Description=сюдаебашьописалово
		After=network.target

		[Service]
		User=хуйзнаетнадолиюзера
		Group=www-data обычно по дефолту
		WorkingDirectory=/путьдорабочейдириктории/
		Environment="PATH=/путьдорабочейдириктории/myenv/bin"
		ExecStart=/bin/bash -c 'source /путьдорабочейдиректории/env/bin/activate; gunicorn -w 3 --bind unix:/tmp/своёназвание/своёназвание.sock wsgi:app'
		Restart=always

		[Install]
		WantedBy=multi-user.target

	6. mkdir /tmp/своёназвание

	7. systemctl enable своёназвание
	   systemctl start своёназвание
	   systemctl status своёназвание

	опять надо зелёненькое, если красное то беда, опять гуглить

	8. /etc/nginx/sites-enabled
		если тут уже есть дефолт то прекрасно, если нет создай свой сервер файл, можешь посмотреть в интернете темплейты для него

	9. Открывай файл, ищи 
		location / {
			}

	10. При необходимости сменить server_name server.example.com;
	11. location / {

        	include proxy_params;
        	proxy_pass http://unix:/tmp/своёназвание/своёназвание.sock;

  		 }
	12. Если всё воркает получаешь сертификат 
		certbot --nginx
		там вводишь мыло, поддтверждаешь выбираешь домен, всё ок должно быть
	


						   К О Н Г Р А Т У Л Е Й Ш Н С
							      теперь вы девопс
